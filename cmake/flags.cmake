function(ISVD_FLAGS_FN)
  # Create flags

  set(incs "-I${CMAKE_INSTALL_PREFIX}/include/c")
  foreach(i ${INCS})
    string(REGEX REPLACE "^ " "" i "${i}")
    set(incs "${incs} -isystem ${i}")
  endforeach()
  string(REGEX REPLACE "  +" " " incs "${incs}")
  string(REGEX REPLACE "^ " "" incs "${incs}")

  set(libs "${CMAKE_INSTALL_PREFIX}/${LIB_FOLDER}/libisvd${BIN_SUFFIX}.so")
  foreach(l ${LIBS})
    string(REGEX REPLACE "^ " "" l "${l}")
    set(libs "${libs} ${l}")
  endforeach()
  string(REGEX REPLACE "  +" " " libs "${libs}")
  string(REGEX REPLACE "^ " "" libs "${libs}")

  set(defs "")
  foreach(d ${DEFS})
    string(REGEX REPLACE "^ " "" d "${d}")
    string(SUBSTRING ${d} 0 1 d0)
    if(${d0} MATCHES "-")
      set(defs "${defs} ${d}")
    else()
      set(defs "${defs} -D${d}")
    endif()
  endforeach()
  string(REGEX REPLACE "  +" " " cflgs "${CMAKE_C_FLAGS} ${COMFLGS} ${defs}")
  string(REGEX REPLACE "^ " "" cflgs "${cflgs}")

  string(REGEX REPLACE "  +" " " cxxflgs "${CMAKE_CXX_FLAGS} ${COMFLGS} ${defs}")
  string(REGEX REPLACE "^ " "" cxxflgs "${cxxflgs}")

  string(REGEX REPLACE "  +" " " lnkflgs "${LNKFLGS}")
  string(REGEX REPLACE "^ " "" lnkflgs "${lnkflgs}")

  # Set flags
  set(ISVD_INCS "${incs}" PARENT_SCOPE)
  set(ISVD_LIBS "${libs}" PARENT_SCOPE)
  set(ISVD_C_FLAGS "${cflgs}" PARENT_SCOPE)
  set(ISVD_CXX_FLAGS "${cxxflgs}" PARENT_SCOPE)
  set(ISVD_LNKFLGS "${lnkflgs}" PARENT_SCOPE)
endfunction()
